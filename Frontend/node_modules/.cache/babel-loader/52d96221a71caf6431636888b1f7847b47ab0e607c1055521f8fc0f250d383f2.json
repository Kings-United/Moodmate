{"ast":null,"code":"import _objectSpread from\"C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useEffect,useState}from'react';import{signInWithEmailAndPassword,createUserWithEmailAndPassword,signOut,onAuthStateChanged,updateProfile}from'firebase/auth';import{auth}from'../services/firebase';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuthContext=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuthContext must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Monitor auth state changes\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async firebaseUser=>{try{if(firebaseUser){// Register/login with backend\nawait authAPI.login();setUser({uid:firebaseUser.uid,email:firebaseUser.email,displayName:firebaseUser.displayName,photoURL:firebaseUser.photoURL});}else{setUser(null);}}catch(error){console.error('Auth state change error:',error);setError(error.message);}finally{setLoading(false);}});return unsubscribe;},[]);const login=async(email,password)=>{try{setError(null);setLoading(true);const result=await signInWithEmailAndPassword(auth,email,password);return result.user;}catch(error){setError(error.message);throw error;}finally{setLoading(false);}};const register=async(email,password,displayName)=>{try{setError(null);setLoading(true);// Create Firebase user\nconst result=await createUserWithEmailAndPassword(auth,email,password);// Update display name\nawait updateProfile(result.user,{displayName});// Register with backend\nawait authAPI.register({uid:result.user.uid,email:result.user.email,name:displayName});return result.user;}catch(error){setError(error.message);throw error;}finally{setLoading(false);}};const logout=async()=>{try{setError(null);await signOut(auth);}catch(error){setError(error.message);throw error;}};const updateUserProfile=async profileData=>{try{setError(null);// Update Firebase profile\nif(profileData.displayName){await updateProfile(auth.currentUser,{displayName:profileData.displayName});}// Update backend profile\nawait authAPI.updateProfile(profileData);// Update local state\nsetUser(prev=>_objectSpread(_objectSpread({},prev),{},{displayName:profileData.displayName||prev.displayName}));}catch(error){setError(error.message);throw error;}};const clearError=()=>setError(null);const value={user,loading,error,login,register,logout,updateUserProfile,clearError};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","auth","authAPI","jsx","_jsx","AuthContext","useAuthContext","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","unsubscribe","firebaseUser","login","uid","email","displayName","photoURL","console","message","password","result","register","name","logout","updateUserProfile","profileData","currentUser","prev","_objectSpread","clearError","value","Provider"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport {\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    signOut,\r\n    onAuthStateChanged,\r\n    updateProfile\r\n} from 'firebase/auth';\r\nimport { auth } from '../services/firebase';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const useAuthContext = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuthContext must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Monitor auth state changes\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n            try {\r\n                if (firebaseUser) {\r\n                    // Register/login with backend\r\n                    await authAPI.login();\r\n                    setUser({\r\n                        uid: firebaseUser.uid,\r\n                        email: firebaseUser.email,\r\n                        displayName: firebaseUser.displayName,\r\n                        photoURL: firebaseUser.photoURL\r\n                    });\r\n                } else {\r\n                    setUser(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth state change error:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n            const result = await signInWithEmailAndPassword(auth, email, password);\r\n            return result.user;\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const register = async (email, password, displayName) => {\r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n\r\n            // Create Firebase user\r\n            const result = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n            // Update display name\r\n            await updateProfile(result.user, { displayName });\r\n\r\n            // Register with backend\r\n            await authAPI.register({\r\n                uid: result.user.uid,\r\n                email: result.user.email,\r\n                name: displayName\r\n            });\r\n\r\n            return result.user;\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            setError(null);\r\n            await signOut(auth);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updateUserProfile = async (profileData) => {\r\n        try {\r\n            setError(null);\r\n\r\n            // Update Firebase profile\r\n            if (profileData.displayName) {\r\n                await updateProfile(auth.currentUser, {\r\n                    displayName: profileData.displayName\r\n                });\r\n            }\r\n\r\n            // Update backend profile\r\n            await authAPI.updateProfile(profileData);\r\n\r\n            // Update local state\r\n            setUser(prev => ({\r\n                ...prev,\r\n                displayName: profileData.displayName || prev.displayName\r\n            }));\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUserProfile,\r\n        clearError\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}