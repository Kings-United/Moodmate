{"ast":null,"code":"import axios from 'axios';\nimport { auth } from './firebase';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconsole.log('API Configuration:', {\n  API_URL,\n  NODE_ENV: process.env.NODE_ENV,\n  REACT_APP_API_URL: process.env.REACT_APP_API_URL\n});\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 30000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(async config => {\n  console.log('API Request:', {\n    method: config.method,\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: `${config.baseURL}${config.url}`\n  });\n  const user = auth.currentUser;\n  if (user) {\n    const token = await user.getIdToken();\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Auth token added to request');\n  } else {\n    console.log('No auth user found');\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('API Response:', {\n    status: response.status,\n    url: response.config.url,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3, _error$response4;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    message: error.message,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n  });\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n    // Token expired or invalid\n    console.log('Unauthorized - signing out user');\n    auth.signOut();\n  }\n  return Promise.reject(error);\n});\n\n// Test connection function\nexport const testConnection = async () => {\n  try {\n    console.log('Testing API connection...');\n    // Try the health endpoint directly (not under /api)\n    const response = await fetch('http://localhost:3001/health');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('API connection successful:', data);\n    return data;\n  } catch (error) {\n    console.error('API connection failed:', error);\n    throw error;\n  }\n};\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: () => api.post('/auth/login'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Journal API\nexport const journalAPI = {\n  createEntry: entryData => api.post('/journal', entryData),\n  getEntries: limit => api.get(`/journal?limit=${limit || 50}`),\n  getEntry: id => api.get(`/journal/${id}`),\n  updateEntry: (id, entryData) => api.put(`/journal/${id}`, entryData),\n  deleteEntry: id => api.delete(`/journal/${id}`)\n};\n\n// AI API\nexport const aiAPI = {\n  analyzeSentiment: text => api.post('/ai/sentiment', {\n    text\n  }),\n  generateResponse: data => api.post('/ai/response', data),\n  getCrisisSupport: () => api.get('/ai/crisis-support')\n};\n\n// Insights API\nexport const insightsAPI = {\n  getMoodTrends: days => api.get(`/insights/mood-trends?days=${days || 30}`),\n  getEmotionAnalysis: days => api.get(`/insights/emotions?days=${days || 30}`),\n  getInsights: () => api.get('/insights/summary')\n};\nexport default api;","map":{"version":3,"names":["axios","auth","API_URL","process","env","REACT_APP_API_URL","console","log","NODE_ENV","api","create","baseURL","timeout","interceptors","request","use","config","method","url","fullURL","user","currentUser","token","getIdToken","headers","Authorization","error","Promise","reject","response","status","data","_error$response","_error$response2","_error$config","_error$response3","_error$response4","statusText","message","signOut","testConnection","fetch","ok","Error","json","authAPI","register","userData","post","login","getProfile","get","updateProfile","put","journalAPI","createEntry","entryData","getEntries","limit","getEntry","id","updateEntry","deleteEntry","delete","aiAPI","analyzeSentiment","text","generateResponse","getCrisisSupport","insightsAPI","getMoodTrends","days","getEmotionAnalysis","getInsights"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { auth } from './firebase';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nconsole.log('API Configuration:', {\r\n    API_URL,\r\n    NODE_ENV: process.env.NODE_ENV,\r\n    REACT_APP_API_URL: process.env.REACT_APP_API_URL\r\n});\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 30000,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n    async (config) => {\r\n        console.log('API Request:', {\r\n            method: config.method,\r\n            url: config.url,\r\n            baseURL: config.baseURL,\r\n            fullURL: `${config.baseURL}${config.url}`\r\n        });\r\n        \r\n        const user = auth.currentUser;\r\n        if (user) {\r\n            const token = await user.getIdToken();\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n            console.log('Auth token added to request');\r\n        } else {\r\n            console.log('No auth user found');\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('Request interceptor error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        console.log('API Response:', {\r\n            status: response.status,\r\n            url: response.config.url,\r\n            data: response.data\r\n        });\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('API Error:', {\r\n            status: error.response?.status,\r\n            statusText: error.response?.statusText,\r\n            url: error.config?.url,\r\n            message: error.message,\r\n            data: error.response?.data\r\n        });\r\n        \r\n        if (error.response?.status === 401) {\r\n            // Token expired or invalid\r\n            console.log('Unauthorized - signing out user');\r\n            auth.signOut();\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Test connection function\r\nexport const testConnection = async () => {\r\n    try {\r\n        console.log('Testing API connection...');\r\n        // Try the health endpoint directly (not under /api)\r\n        const response = await fetch('http://localhost:3001/health');\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('API connection successful:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('API connection failed:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n    register: (userData) => api.post('/auth/register', userData),\r\n    login: () => api.post('/auth/login'),\r\n    getProfile: () => api.get('/auth/profile'),\r\n    updateProfile: (userData) => api.put('/auth/profile', userData),\r\n};\r\n\r\n// Journal API\r\nexport const journalAPI = {\r\n    createEntry: (entryData) => api.post('/journal', entryData),\r\n    getEntries: (limit) => api.get(`/journal?limit=${limit || 50}`),\r\n    getEntry: (id) => api.get(`/journal/${id}`),\r\n    updateEntry: (id, entryData) => api.put(`/journal/${id}`, entryData),\r\n    deleteEntry: (id) => api.delete(`/journal/${id}`),\r\n};\r\n\r\n// AI API\r\nexport const aiAPI = {\r\n    analyzeSentiment: (text) => api.post('/ai/sentiment', { text }),\r\n    generateResponse: (data) => api.post('/ai/response', data),\r\n    getCrisisSupport: () => api.get('/ai/crisis-support'),\r\n};\r\n\r\n// Insights API\r\nexport const insightsAPI = {\r\n    getMoodTrends: (days) => api.get(`/insights/mood-trends?days=${days || 30}`),\r\n    getEmotionAnalysis: (days) => api.get(`/insights/emotions?days=${days || 30}`),\r\n    getInsights: () => api.get('/insights/summary'),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}