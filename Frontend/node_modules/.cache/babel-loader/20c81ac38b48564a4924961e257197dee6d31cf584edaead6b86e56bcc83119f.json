{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mayur\\\\OneDrive\\\\Desktop\\\\Moodmate\\\\Frontend\\\\src\\\\contexts\\\\AIContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { aiAPI } from '../services/api';\nimport { localAIService } from '../services/localAIService';\nimport { fallbackAIService } from '../services/fallbackAIService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIContext = /*#__PURE__*/createContext({});\nexport const useAI = () => {\n  _s();\n  const context = useContext(AIContext);\n  if (!context) {\n    throw new Error('useAI must be used within an AIProvider');\n  }\n  return context;\n};\n_s(useAI, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AIProvider = ({\n  children\n}) => {\n  _s2();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [lastResponse, setLastResponse] = useState(null);\n  const analyzeSentiment = async text => {\n    setIsProcessing(true);\n    try {\n      // Try backend AI first\n      const response = await aiAPI.analyzeSentiment(text);\n      return response.data;\n    } catch (error) {\n      console.warn('Backend AI failed, using local AI:', error);\n      // Fallback to local AI\n      return localAIService.analyzeSentiment(text);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const generateResponse = async (text, mood, context = {}) => {\n    setIsProcessing(true);\n    try {\n      // Try backend AI first\n      const response = await aiAPI.generateResponse({\n        text,\n        mood,\n        context\n      });\n      const result = response.data;\n      setLastResponse(result);\n      return result;\n    } catch (error) {\n      console.warn('Backend AI failed, using fallback AI:', error);\n      // Fallback to rule-based responses\n      const sentiment = await localAIService.analyzeSentiment(text);\n      const result = fallbackAIService.generateResponse(text, mood, sentiment.score);\n      setLastResponse(result);\n      return result;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const getCrisisSupport = async () => {\n    try {\n      const response = await aiAPI.getCrisisSupport();\n      return response.data;\n    } catch (error) {\n      console.warn('Failed to get crisis support from backend');\n      return fallbackAIService.getCrisisSupport();\n    }\n  };\n  const value = {\n    isProcessing,\n    lastResponse,\n    analyzeSentiment,\n    generateResponse,\n    getCrisisSupport\n  };\n  return /*#__PURE__*/_jsxDEV(AIContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s2(AIProvider, \"57/H3fpKy89XMlS8z90RbJZzkfE=\");\n_c = AIProvider;\nvar _c;\n$RefreshReg$(_c, \"AIProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","aiAPI","localAIService","fallbackAIService","jsxDEV","_jsxDEV","AIContext","useAI","_s","context","Error","AIProvider","children","_s2","isProcessing","setIsProcessing","lastResponse","setLastResponse","analyzeSentiment","text","response","data","error","console","warn","generateResponse","mood","result","sentiment","score","getCrisisSupport","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/contexts/AIContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { aiAPI } from '../services/api';\r\nimport { localAIService } from '../services/localAIService';\r\nimport { fallbackAIService } from '../services/fallbackAIService';\r\n\r\nconst AIContext = createContext({});\r\n\r\nexport const useAI = () => {\r\n    const context = useContext(AIContext);\r\n    if (!context) {\r\n        throw new Error('useAI must be used within an AIProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AIProvider = ({ children }) => {\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [lastResponse, setLastResponse] = useState(null);\r\n\r\n    const analyzeSentiment = async (text) => {\r\n        setIsProcessing(true);\r\n        try {\r\n            // Try backend AI first\r\n            const response = await aiAPI.analyzeSentiment(text);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.warn('Backend AI failed, using local AI:', error);\r\n            // Fallback to local AI\r\n            return localAIService.analyzeSentiment(text);\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    const generateResponse = async (text, mood, context = {}) => {\r\n        setIsProcessing(true);\r\n        try {\r\n            // Try backend AI first\r\n            const response = await aiAPI.generateResponse({ text, mood, context });\r\n            const result = response.data;\r\n            setLastResponse(result);\r\n            return result;\r\n        } catch (error) {\r\n            console.warn('Backend AI failed, using fallback AI:', error);\r\n            // Fallback to rule-based responses\r\n            const sentiment = await localAIService.analyzeSentiment(text);\r\n            const result = fallbackAIService.generateResponse(text, mood, sentiment.score);\r\n            setLastResponse(result);\r\n            return result;\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    const getCrisisSupport = async () => {\r\n        try {\r\n            const response = await aiAPI.getCrisisSupport();\r\n            return response.data;\r\n        } catch (error) {\r\n            console.warn('Failed to get crisis support from backend');\r\n            return fallbackAIService.getCrisisSupport();\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        isProcessing,\r\n        lastResponse,\r\n        analyzeSentiment,\r\n        generateResponse,\r\n        getCrisisSupport\r\n    };\r\n\r\n    return (\r\n        <AIContext.Provider value={value}>\r\n            {children}\r\n        </AIContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}