{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mayur\\\\OneDrive\\\\Desktop\\\\Moodmate\\\\Frontend\\\\src\\\\components\\\\journal\\\\JournalEntryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TextArea from './TextArea';\nimport MoodSlider from './MoodSlider';\nimport { EMOTIONS_LIST } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntryForm = ({\n  entry = null,\n  onSave,\n  onCancel,\n  isNew = false,\n  isEditing = false\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [mood, setMood] = useState(5);\n  const [emotions, setEmotions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (entry) {\n      setContent(entry.content || '');\n      setMood(entry.mood || 5);\n      setEmotions(entry.emotions || []);\n    }\n  }, [entry]);\n  const handleEmotionToggle = emotion => {\n    setEmotions(prev => prev.includes(emotion) ? prev.filter(e => e !== emotion) : [...prev, emotion]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!content.trim()) {\n      alert('Please write something in your journal entry.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const entryData = {\n        content: content.trim(),\n        mood,\n        emotions,\n        createdAt: (entry === null || entry === void 0 ? void 0 : entry.createdAt) || new Date().toISOString()\n      };\n      await onSave(entryData);\n    } catch (error) {\n      console.error('Error saving entry:', error);\n      alert('Failed to save entry. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    if (content.trim() && !window.confirm('Are you sure you want to cancel? Your changes will be lost.')) {\n      return;\n    }\n    onCancel();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"journal-entry-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isNew ? 'New Journal Entry' : 'Edit Entry'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isNew ? 'Capture your thoughts and feelings' : 'Update your entry'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(MoodSlider, {\n          value: mood,\n          onChange: setMood,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          value: content,\n          onChange: setContent,\n          placeholder: \"How was your day? What's on your mind? Share your thoughts and feelings...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"emotions-label\",\n          children: \"What emotions are you feeling? (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotions-grid\",\n          children: EMOTIONS_LIST.map(emotion => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `emotion-chip ${emotions.includes(emotion) ? 'selected' : ''}`,\n            onClick: () => handleEmotionToggle(emotion),\n            disabled: loading,\n            children: emotion\n          }, emotion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: handleCancel,\n        disabled: loading,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading || !content.trim(),\n        children: loading ? 'Saving...' : isNew ? 'Save Entry' : 'Update Entry'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(JournalEntryForm, \"pTk5ZuNqkjGC/6blGmJzpc4bLe8=\");\n_c = JournalEntryForm;\nexport default JournalEntryForm;\nvar _c;\n$RefreshReg$(_c, \"JournalEntryForm\");","map":{"version":3,"names":["React","useState","useEffect","TextArea","MoodSlider","EMOTIONS_LIST","jsxDEV","_jsxDEV","JournalEntryForm","entry","onSave","onCancel","isNew","isEditing","_s","content","setContent","mood","setMood","emotions","setEmotions","loading","setLoading","handleEmotionToggle","emotion","prev","includes","filter","e","handleSubmit","preventDefault","trim","alert","entryData","createdAt","Date","toISOString","error","console","handleCancel","window","confirm","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","disabled","placeholder","map","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/components/journal/JournalEntryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextArea from './TextArea';\r\nimport MoodSlider from './MoodSlider';\r\nimport { EMOTIONS_LIST } from '../../utils/constants';\r\n\r\nconst JournalEntryForm = ({\r\n    entry = null,\r\n    onSave,\r\n    onCancel,\r\n    isNew = false,\r\n    isEditing = false\r\n}) => {\r\n    const [content, setContent] = useState('');\r\n    const [mood, setMood] = useState(5);\r\n    const [emotions, setEmotions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (entry) {\r\n            setContent(entry.content || '');\r\n            setMood(entry.mood || 5);\r\n            setEmotions(entry.emotions || []);\r\n        }\r\n    }, [entry]);\r\n\r\n    const handleEmotionToggle = (emotion) => {\r\n        setEmotions(prev => \r\n            prev.includes(emotion)\r\n                ? prev.filter(e => e !== emotion)\r\n                : [...prev, emotion]\r\n        );\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!content.trim()) {\r\n            alert('Please write something in your journal entry.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const entryData = {\r\n                content: content.trim(),\r\n                mood,\r\n                emotions,\r\n                createdAt: entry?.createdAt || new Date().toISOString()\r\n            };\r\n\r\n            await onSave(entryData);\r\n        } catch (error) {\r\n            console.error('Error saving entry:', error);\r\n            alert('Failed to save entry. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        if (content.trim() && !window.confirm('Are you sure you want to cancel? Your changes will be lost.')) {\r\n            return;\r\n        }\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n        <form className=\"journal-entry-form\" onSubmit={handleSubmit}>\r\n            <div className=\"form-header\">\r\n                <h2>{isNew ? 'New Journal Entry' : 'Edit Entry'}</h2>\r\n                <p>{isNew ? 'Capture your thoughts and feelings' : 'Update your entry'}</p>\r\n            </div>\r\n\r\n            <div className=\"form-content\">\r\n                {/* Mood Slider */}\r\n                <div className=\"form-section\">\r\n                    <MoodSlider\r\n                        value={mood}\r\n                        onChange={setMood}\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                {/* Text Area */}\r\n                <div className=\"form-section\">\r\n                    <TextArea\r\n                        value={content}\r\n                        onChange={setContent}\r\n                        placeholder=\"How was your day? What's on your mind? Share your thoughts and feelings...\"\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                {/* Emotions */}\r\n                <div className=\"form-section\">\r\n                    <label className=\"emotions-label\">\r\n                        What emotions are you feeling? (Optional)\r\n                    </label>\r\n                    <div className=\"emotions-grid\">\r\n                        {EMOTIONS_LIST.map(emotion => (\r\n                            <button\r\n                                key={emotion}\r\n                                type=\"button\"\r\n                                className={`emotion-chip ${emotions.includes(emotion) ? 'selected' : ''}`}\r\n                                onClick={() => handleEmotionToggle(emotion)}\r\n                                disabled={loading}\r\n                            >\r\n                                {emotion}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={handleCancel}\r\n                    disabled={loading}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={loading || !content.trim()}\r\n                >\r\n                    {loading ? 'Saving...' : (isNew ? 'Save Entry' : 'Update Entry')}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default JournalEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}