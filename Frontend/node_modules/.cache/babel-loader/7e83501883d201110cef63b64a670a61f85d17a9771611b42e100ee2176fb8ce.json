{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mayur\\\\OneDrive\\\\Desktop\\\\Moodmate\\\\Frontend\\\\src\\\\components\\\\common\\\\LoadingSpinner.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'medium',\n  message = 'Loading...'\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `loading-container loading-container--${size}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/components/common/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst LoadingSpinner = ({ size = 'medium', message = 'Loading...' }) => {\r\n    return (\r\n        <div className={`loading-container loading-container--${size}`}>\r\n            <div className=\"loading-spinner\">\r\n                <div className=\"spinner\"></div>\r\n            </div>\r\n            {message && <p className=\"loading-message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,GAAG,QAAQ;EAAEC,OAAO,GAAG;AAAa,CAAC,KAAK;EACpE,oBACIH,OAAA;IAAKI,SAAS,EAAE,wCAAwCF,IAAI,EAAG;IAAAG,QAAA,gBAC3DL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5BL,OAAA;QAAKI,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACLN,OAAO,iBAAIH,OAAA;MAAGI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEF;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEd,CAAC;AAACC,EAAA,GATIT,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}