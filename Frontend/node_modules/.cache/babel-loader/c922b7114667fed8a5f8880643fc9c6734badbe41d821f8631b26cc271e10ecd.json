{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { journalAPI } from '../services/api';\nexport const useJournal = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchEntries = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await journalAPI.getEntries();\n\n      // Debug logging for entries data\n      console.log('Journal entries response:', response.data);\n\n      // Handle the nested response format from backend\n      const entriesData = response.data.entries || response.data || [];\n\n      // Validate and clean entries data\n      const validEntries = entriesData.map(entry => {\n        // Ensure createdAt is a valid date\n        if (entry.createdAt) {\n          const date = new Date(entry.createdAt);\n          if (isNaN(date.getTime())) {\n            console.warn('Invalid date found in entry:', entry.id, entry.createdAt);\n            entry.createdAt = new Date().toISOString(); // Use current date as fallback\n          }\n        } else {\n          console.warn('Missing createdAt in entry:', entry.id);\n          entry.createdAt = new Date().toISOString(); // Use current date as fallback\n        }\n        return entry;\n      });\n      console.log('Processed entries:', validEntries);\n      setEntries(validEntries);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n  const addEntry = async entryData => {\n    try {\n      console.log('Adding entry:', entryData);\n      const response = await journalAPI.createEntry(entryData);\n\n      // Handle the nested response format\n      const newEntry = response.data.entry || response.data;\n      console.log('New entry received:', newEntry);\n      setEntries(prev => [newEntry, ...prev]);\n      return newEntry;\n    } catch (error) {\n      console.error('Error adding entry:', error);\n      throw error;\n    }\n  };\n  const updateEntry = async (id, entryData) => {\n    try {\n      console.log('Updating entry:', id, entryData);\n      const response = await journalAPI.updateEntry(id, entryData);\n\n      // Handle the nested response format\n      const updatedEntry = response.data.entry || response.data;\n      console.log('Updated entry received:', updatedEntry);\n      setEntries(prev => prev.map(entry => entry.id === id ? updatedEntry : entry));\n      return updatedEntry;\n    } catch (error) {\n      console.error('Error updating entry:', error);\n      throw error;\n    }\n  };\n  const deleteEntry = async id => {\n    try {\n      console.log('Deleting entry:', id);\n      await journalAPI.deleteEntry(id);\n      setEntries(prev => prev.filter(entry => entry.id !== id));\n    } catch (error) {\n      console.error('Error deleting entry:', error);\n      throw error;\n    }\n  };\n  return {\n    entries,\n    loading,\n    error,\n    addEntry,\n    updateEntry,\n    deleteEntry,\n    refetch: fetchEntries\n  };\n};\n_s(useJournal, \"VXxnBTQjStzwAeJpYl63scOGlic=\");","map":{"version":3,"names":["useState","useEffect","journalAPI","useJournal","_s","entries","setEntries","loading","setLoading","error","setError","fetchEntries","response","getEntries","console","log","data","entriesData","validEntries","map","entry","createdAt","date","Date","isNaN","getTime","warn","id","toISOString","message","addEntry","entryData","createEntry","newEntry","prev","updateEntry","updatedEntry","deleteEntry","filter","refetch"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/hooks/useJournal.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { journalAPI } from '../services/api';\r\n\r\nexport const useJournal = () => {\r\n    const [entries, setEntries] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchEntries = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await journalAPI.getEntries();\r\n            \r\n            // Debug logging for entries data\r\n            console.log('Journal entries response:', response.data);\r\n            \r\n            // Handle the nested response format from backend\r\n            const entriesData = response.data.entries || response.data || [];\r\n            \r\n            // Validate and clean entries data\r\n            const validEntries = entriesData.map(entry => {\r\n                // Ensure createdAt is a valid date\r\n                if (entry.createdAt) {\r\n                    const date = new Date(entry.createdAt);\r\n                    if (isNaN(date.getTime())) {\r\n                        console.warn('Invalid date found in entry:', entry.id, entry.createdAt);\r\n                        entry.createdAt = new Date().toISOString(); // Use current date as fallback\r\n                    }\r\n                } else {\r\n                    console.warn('Missing createdAt in entry:', entry.id);\r\n                    entry.createdAt = new Date().toISOString(); // Use current date as fallback\r\n                }\r\n                return entry;\r\n            });\r\n            \r\n            console.log('Processed entries:', validEntries);\r\n            setEntries(validEntries);\r\n        } catch (error) {\r\n            console.error('Error fetching entries:', error);\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEntries();\r\n    }, []);\r\n\r\n    const addEntry = async (entryData) => {\r\n        try {\r\n            console.log('Adding entry:', entryData);\r\n            const response = await journalAPI.createEntry(entryData);\r\n            \r\n            // Handle the nested response format\r\n            const newEntry = response.data.entry || response.data;\r\n            console.log('New entry received:', newEntry);\r\n            \r\n            setEntries(prev => [newEntry, ...prev]);\r\n            return newEntry;\r\n        } catch (error) {\r\n            console.error('Error adding entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updateEntry = async (id, entryData) => {\r\n        try {\r\n            console.log('Updating entry:', id, entryData);\r\n            const response = await journalAPI.updateEntry(id, entryData);\r\n            \r\n            // Handle the nested response format\r\n            const updatedEntry = response.data.entry || response.data;\r\n            console.log('Updated entry received:', updatedEntry);\r\n            \r\n            setEntries(prev => prev.map(entry => \r\n                entry.id === id ? updatedEntry : entry\r\n            ));\r\n            return updatedEntry;\r\n        } catch (error) {\r\n            console.error('Error updating entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const deleteEntry = async (id) => {\r\n        try {\r\n            console.log('Deleting entry:', id);\r\n            await journalAPI.deleteEntry(id);\r\n            setEntries(prev => prev.filter(entry => entry.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return {\r\n        entries,\r\n        loading,\r\n        error,\r\n        addEntry,\r\n        updateEntry,\r\n        deleteEntry,\r\n        refetch: fetchEntries\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}