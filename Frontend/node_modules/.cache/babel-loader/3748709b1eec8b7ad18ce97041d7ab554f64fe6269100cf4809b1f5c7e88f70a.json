{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Log Firebase configuration (without sensitive data)\nconsole.log('Firebase Configuration Status:', {\n  hasApiKey: !!process.env.REACT_APP_FIREBASE_API_KEY,\n  hasAuthDomain: !!process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  hasProjectId: !!process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  hasStorageBucket: !!process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  hasMessagingSenderId: !!process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  hasAppId: !!process.env.REACT_APP_FIREBASE_APP_ID,\n  NODE_ENV: process.env.NODE_ENV\n});\n\n// Check if all required config values are present\nconst missingConfig = Object.entries(firebaseConfig).filter(([key, value]) => !value);\nif (missingConfig.length > 0) {\n  console.error('‚ùå Missing Firebase configuration:', missingConfig.map(([key]) => key));\n  console.error('Please check your .env file in the Frontend directory');\n} else {\n  console.log('‚úÖ Firebase configuration looks complete');\n}\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n\n// Connect to auth emulator in development\nif (process.env.NODE_ENV === 'development') {\n  console.log('üîß Development mode detected');\n\n  // Check if emulator should be used\n  const useEmulator = process.env.REACT_APP_USE_FIREBASE_EMULATOR === 'true';\n  if (useEmulator) {\n    console.log('üöÄ Attempting to connect to Firebase Auth Emulator...');\n    try {\n      connectAuthEmulator(auth, 'http://localhost:9099');\n      console.log('‚úÖ Connected to Firebase Auth Emulator');\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Firebase Auth Emulator connection failed:', error.message);\n      console.log('üí° Make sure Firebase emulator is running: firebase emulators:start');\n    }\n  } else {\n    console.log('üåê Using Firebase production auth');\n  }\n} else {\n  console.log('üöÄ Production mode - using Firebase production auth');\n}\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","connectAuthEmulator","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","console","log","hasApiKey","hasAuthDomain","hasProjectId","hasStorageBucket","hasMessagingSenderId","hasAppId","NODE_ENV","missingConfig","Object","entries","filter","key","value","length","error","map","app","auth","useEmulator","REACT_APP_USE_FIREBASE_EMULATOR","warn","message"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/services/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\n// Log Firebase configuration (without sensitive data)\r\nconsole.log('Firebase Configuration Status:', {\r\n    hasApiKey: !!process.env.REACT_APP_FIREBASE_API_KEY,\r\n    hasAuthDomain: !!process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    hasProjectId: !!process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    hasStorageBucket: !!process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    hasMessagingSenderId: !!process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    hasAppId: !!process.env.REACT_APP_FIREBASE_APP_ID,\r\n    NODE_ENV: process.env.NODE_ENV\r\n});\r\n\r\n// Check if all required config values are present\r\nconst missingConfig = Object.entries(firebaseConfig).filter(([key, value]) => !value);\r\nif (missingConfig.length > 0) {\r\n    console.error('‚ùå Missing Firebase configuration:', missingConfig.map(([key]) => key));\r\n    console.error('Please check your .env file in the Frontend directory');\r\n} else {\r\n    console.log('‚úÖ Firebase configuration looks complete');\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n\r\n// Connect to auth emulator in development\r\nif (process.env.NODE_ENV === 'development') {\r\n    console.log('üîß Development mode detected');\r\n    \r\n    // Check if emulator should be used\r\n    const useEmulator = process.env.REACT_APP_USE_FIREBASE_EMULATOR === 'true';\r\n    \r\n    if (useEmulator) {\r\n        console.log('üöÄ Attempting to connect to Firebase Auth Emulator...');\r\n        try {\r\n            connectAuthEmulator(auth, 'http://localhost:9099');\r\n            console.log('‚úÖ Connected to Firebase Auth Emulator');\r\n        } catch (error) {\r\n            console.warn('‚ö†Ô∏è Firebase Auth Emulator connection failed:', error.message);\r\n            console.log('üí° Make sure Firebase emulator is running: firebase emulators:start');\r\n        }\r\n    } else {\r\n        console.log('üåê Using Firebase production auth');\r\n    }\r\n} else {\r\n    console.log('üöÄ Production mode - using Firebase production auth');\r\n}\r\n\r\nexport default app;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAE5D,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW;AACvB,CAAC;;AAED;AACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE;EAC1CC,SAAS,EAAE,CAAC,CAACf,OAAO,CAACC,GAAG,CAACC,0BAA0B;EACnDc,aAAa,EAAE,CAAC,CAAChB,OAAO,CAACC,GAAG,CAACG,8BAA8B;EAC3Da,YAAY,EAAE,CAAC,CAACjB,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACzDY,gBAAgB,EAAE,CAAC,CAAClB,OAAO,CAACC,GAAG,CAACO,iCAAiC;EACjEW,oBAAoB,EAAE,CAAC,CAACnB,OAAO,CAACC,GAAG,CAACS,sCAAsC;EAC1EU,QAAQ,EAAE,CAAC,CAACpB,OAAO,CAACC,GAAG,CAACW,yBAAyB;EACjDS,QAAQ,EAAErB,OAAO,CAACC,GAAG,CAACoB;AAC1B,CAAC,CAAC;;AAEF;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC1B,cAAc,CAAC,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACA,KAAK,CAAC;AACrF,IAAIL,aAAa,CAACM,MAAM,GAAG,CAAC,EAAE;EAC1Bf,OAAO,CAACgB,KAAK,CAAC,mCAAmC,EAAEP,aAAa,CAACQ,GAAG,CAAC,CAAC,CAACJ,GAAG,CAAC,KAAKA,GAAG,CAAC,CAAC;EACrFb,OAAO,CAACgB,KAAK,CAAC,uDAAuD,CAAC;AAC1E,CAAC,MAAM;EACHhB,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;AAC1D;AAEA,MAAMiB,GAAG,GAAGpC,aAAa,CAACG,cAAc,CAAC;AACzC,OAAO,MAAMkC,IAAI,GAAGpC,OAAO,CAACmC,GAAG,CAAC;;AAEhC;AACA,IAAI/B,OAAO,CAACC,GAAG,CAACoB,QAAQ,KAAK,aAAa,EAAE;EACxCR,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;;EAE3C;EACA,MAAMmB,WAAW,GAAGjC,OAAO,CAACC,GAAG,CAACiC,+BAA+B,KAAK,MAAM;EAE1E,IAAID,WAAW,EAAE;IACbpB,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACpE,IAAI;MACAjB,mBAAmB,CAACmC,IAAI,EAAE,uBAAuB,CAAC;MAClDnB,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACxD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZhB,OAAO,CAACsB,IAAI,CAAC,8CAA8C,EAAEN,KAAK,CAACO,OAAO,CAAC;MAC3EvB,OAAO,CAACC,GAAG,CAAC,qEAAqE,CAAC;IACtF;EACJ,CAAC,MAAM;IACHD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EACpD;AACJ,CAAC,MAAM;EACHD,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;AACtE;AAEA,eAAeiB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}