{"ast":null,"code":"import { responseTemplates } from '../data/responses/responseTemplates';\nexport const fallbackAIService = {\n  generateResponse: (text, mood, sentiment) => {\n    // Determine response category based on mood and sentiment\n    let category = 'neutral';\n    if (mood <= 2 || sentiment <= -0.8) {\n      category = 'crisis';\n    } else if (mood <= 4 || sentiment <= -0.5) {\n      category = 'veryNegative';\n    } else if (mood <= 5 || sentiment <= -0.2) {\n      category = 'negative';\n    } else if (mood >= 8 || sentiment >= 0.5) {\n      category = 'veryPositive';\n    } else if (mood >= 6 || sentiment >= 0.2) {\n      category = 'positive';\n    }\n\n    // Get responses for category\n    const responses = responseTemplates[category] || responseTemplates.neutral;\n    const responseArray = Array.isArray(responses) ? responses : responses.general || [responses];\n\n    // Select random response\n    const response = responseArray[Math.floor(Math.random() * responseArray.length)];\n    return {\n      response: response,\n      sentiment: sentiment,\n      category: category,\n      source: 'fallback'\n    };\n  },\n  getCrisisSupport: () => {\n    return {\n      crisisResources: {\n        immediate: {\n          emergency: \"911 (US) or your local emergency number\",\n          crisis: \"988 Suicide & Crisis Lifeline (US)\",\n          text: \"Text HOME to 741741 (Crisis Text Line)\"\n        },\n        international: {\n          uk: \"116 123 (Samaritans)\",\n          canada: \"1-833-456-4566 (Talk Suicide Canada)\",\n          australia: \"13 11 14 (Lifeline Australia)\"\n        },\n        online: [\"https://suicidepreventionlifeline.org/chat/\", \"https://www.crisistextline.org/\", \"https://www.betterhelp.com/\"],\n        message: \"Your life has value. You matter. Help is available, and you don't have to face this alone.\"\n      }\n    };\n  }\n};","map":{"version":3,"names":["responseTemplates","fallbackAIService","generateResponse","text","mood","sentiment","category","responses","neutral","responseArray","Array","isArray","general","response","Math","floor","random","length","source","getCrisisSupport","crisisResources","immediate","emergency","crisis","international","uk","canada","australia","online","message"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/services/fallbackAIService.js"],"sourcesContent":["import { responseTemplates } from '../data/responses/responseTemplates';\r\n\r\nexport const fallbackAIService = {\r\n    generateResponse: (text, mood, sentiment) => {\r\n        // Determine response category based on mood and sentiment\r\n        let category = 'neutral';\r\n\r\n        if (mood <= 2 || sentiment <= -0.8) {\r\n            category = 'crisis';\r\n        } else if (mood <= 4 || sentiment <= -0.5) {\r\n            category = 'veryNegative';\r\n        } else if (mood <= 5 || sentiment <= -0.2) {\r\n            category = 'negative';\r\n        } else if (mood >= 8 || sentiment >= 0.5) {\r\n            category = 'veryPositive';\r\n        } else if (mood >= 6 || sentiment >= 0.2) {\r\n            category = 'positive';\r\n        }\r\n\r\n        // Get responses for category\r\n        const responses = responseTemplates[category] || responseTemplates.neutral;\r\n        const responseArray = Array.isArray(responses) ? responses : responses.general || [responses];\r\n\r\n        // Select random response\r\n        const response = responseArray[Math.floor(Math.random() * responseArray.length)];\r\n\r\n        return {\r\n            response: response,\r\n            sentiment: sentiment,\r\n            category: category,\r\n            source: 'fallback'\r\n        };\r\n    },\r\n\r\n    getCrisisSupport: () => {\r\n        return {\r\n            crisisResources: {\r\n                immediate: {\r\n                    emergency: \"911 (US) or your local emergency number\",\r\n                    crisis: \"988 Suicide & Crisis Lifeline (US)\",\r\n                    text: \"Text HOME to 741741 (Crisis Text Line)\"\r\n                },\r\n                international: {\r\n                    uk: \"116 123 (Samaritans)\",\r\n                    canada: \"1-833-456-4566 (Talk Suicide Canada)\",\r\n                    australia: \"13 11 14 (Lifeline Australia)\"\r\n                },\r\n                online: [\r\n                    \"https://suicidepreventionlifeline.org/chat/\",\r\n                    \"https://www.crisistextline.org/\",\r\n                    \"https://www.betterhelp.com/\"\r\n                ],\r\n                message: \"Your life has value. You matter. Help is available, and you don't have to face this alone.\"\r\n            }\r\n        };\r\n    }\r\n};"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;AAEvE,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAEA,CAACC,IAAI,EAAEC,IAAI,EAAEC,SAAS,KAAK;IACzC;IACA,IAAIC,QAAQ,GAAG,SAAS;IAExB,IAAIF,IAAI,IAAI,CAAC,IAAIC,SAAS,IAAI,CAAC,GAAG,EAAE;MAChCC,QAAQ,GAAG,QAAQ;IACvB,CAAC,MAAM,IAAIF,IAAI,IAAI,CAAC,IAAIC,SAAS,IAAI,CAAC,GAAG,EAAE;MACvCC,QAAQ,GAAG,cAAc;IAC7B,CAAC,MAAM,IAAIF,IAAI,IAAI,CAAC,IAAIC,SAAS,IAAI,CAAC,GAAG,EAAE;MACvCC,QAAQ,GAAG,UAAU;IACzB,CAAC,MAAM,IAAIF,IAAI,IAAI,CAAC,IAAIC,SAAS,IAAI,GAAG,EAAE;MACtCC,QAAQ,GAAG,cAAc;IAC7B,CAAC,MAAM,IAAIF,IAAI,IAAI,CAAC,IAAIC,SAAS,IAAI,GAAG,EAAE;MACtCC,QAAQ,GAAG,UAAU;IACzB;;IAEA;IACA,MAAMC,SAAS,GAAGP,iBAAiB,CAACM,QAAQ,CAAC,IAAIN,iBAAiB,CAACQ,OAAO;IAC1E,MAAMC,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,GAAGA,SAAS,GAAGA,SAAS,CAACK,OAAO,IAAI,CAACL,SAAS,CAAC;;IAE7F;IACA,MAAMM,QAAQ,GAAGJ,aAAa,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,aAAa,CAACQ,MAAM,CAAC,CAAC;IAEhF,OAAO;MACHJ,QAAQ,EAAEA,QAAQ;MAClBR,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBY,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EAEDC,gBAAgB,EAAEA,CAAA,KAAM;IACpB,OAAO;MACHC,eAAe,EAAE;QACbC,SAAS,EAAE;UACPC,SAAS,EAAE,yCAAyC;UACpDC,MAAM,EAAE,oCAAoC;UAC5CpB,IAAI,EAAE;QACV,CAAC;QACDqB,aAAa,EAAE;UACXC,EAAE,EAAE,sBAAsB;UAC1BC,MAAM,EAAE,sCAAsC;UAC9CC,SAAS,EAAE;QACf,CAAC;QACDC,MAAM,EAAE,CACJ,6CAA6C,EAC7C,iCAAiC,EACjC,6BAA6B,CAChC;QACDC,OAAO,EAAE;MACb;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}