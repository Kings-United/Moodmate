{"ast":null,"code":"import{useState,useEffect}from'react';import{insightsAPI}from'../services/api';export const useMoodData=function(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;const[moodTrends,setMoodTrends]=useState(null);const[emotionAnalysis,setEmotionAnalysis]=useState(null);const[insights,setInsights]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchMoodTrends=async function(){let daysParam=arguments.length>0&&arguments[0]!==undefined?arguments[0]:days;try{const response=await insightsAPI.getMoodTrends(daysParam);setMoodTrends(response.data.trends);}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to fetch mood trends');}};const fetchEmotionAnalysis=async function(){let daysParam=arguments.length>0&&arguments[0]!==undefined?arguments[0]:days;try{const response=await insightsAPI.getEmotionAnalysis(daysParam);setEmotionAnalysis(response.data.emotions);}catch(error){var _error$response2,_error$response2$data;setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to fetch emotion analysis');}};const fetchInsights=async()=>{try{const response=await insightsAPI.getInsights();setInsights(response.data.insights);}catch(error){var _error$response3,_error$response3$data;setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to fetch insights');}};const fetchAllData=async()=>{try{setLoading(true);setError(null);await Promise.all([fetchMoodTrends(),fetchEmotionAnalysis(),fetchInsights()]);}catch(error){setError('Failed to fetch mood data');}finally{setLoading(false);}};useEffect(()=>{fetchAllData();},[days]);return{moodTrends,emotionAnalysis,insights,loading,error,refreshData:fetchAllData,fetchMoodTrends,fetchEmotionAnalysis,fetchInsights};};","map":{"version":3,"names":["useState","useEffect","insightsAPI","useMoodData","days","arguments","length","undefined","moodTrends","setMoodTrends","emotionAnalysis","setEmotionAnalysis","insights","setInsights","loading","setLoading","error","setError","fetchMoodTrends","daysParam","response","getMoodTrends","data","trends","_error$response","_error$response$data","fetchEmotionAnalysis","getEmotionAnalysis","emotions","_error$response2","_error$response2$data","fetchInsights","getInsights","_error$response3","_error$response3$data","fetchAllData","Promise","all","refreshData"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/hooks/useMoodData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { insightsAPI } from '../services/api';\r\n\r\nexport const useMoodData = (days = 30) => {\r\n    const [moodTrends, setMoodTrends] = useState(null);\r\n    const [emotionAnalysis, setEmotionAnalysis] = useState(null);\r\n    const [insights, setInsights] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchMoodTrends = async (daysParam = days) => {\r\n        try {\r\n            const response = await insightsAPI.getMoodTrends(daysParam);\r\n            setMoodTrends(response.data.trends);\r\n        } catch (error) {\r\n            setError(error.response?.data?.error || 'Failed to fetch mood trends');\r\n        }\r\n    };\r\n\r\n    const fetchEmotionAnalysis = async (daysParam = days) => {\r\n        try {\r\n            const response = await insightsAPI.getEmotionAnalysis(daysParam);\r\n            setEmotionAnalysis(response.data.emotions);\r\n        } catch (error) {\r\n            setError(error.response?.data?.error || 'Failed to fetch emotion analysis');\r\n        }\r\n    };\r\n\r\n    const fetchInsights = async () => {\r\n        try {\r\n            const response = await insightsAPI.getInsights();\r\n            setInsights(response.data.insights);\r\n        } catch (error) {\r\n            setError(error.response?.data?.error || 'Failed to fetch insights');\r\n        }\r\n    };\r\n\r\n    const fetchAllData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            await Promise.all([\r\n                fetchMoodTrends(),\r\n                fetchEmotionAnalysis(),\r\n                fetchInsights()\r\n            ]);\r\n        } catch (error) {\r\n            setError('Failed to fetch mood data');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAllData();\r\n    }, [days]);\r\n\r\n    return {\r\n        moodTrends,\r\n        emotionAnalysis,\r\n        insights,\r\n        loading,\r\n        error,\r\n        refreshData: fetchAllData,\r\n        fetchMoodTrends,\r\n        fetchEmotionAnalysis,\r\n        fetchInsights\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}