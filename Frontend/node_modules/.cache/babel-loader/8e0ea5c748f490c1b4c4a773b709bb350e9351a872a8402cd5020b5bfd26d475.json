{"ast":null,"code":"import axios from 'axios';\nimport { auth } from './firebase';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 30000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(async config => {\n  const user = auth.currentUser;\n  if (user) {\n    const token = await user.getIdToken();\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    auth.signOut();\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: () => api.post('/auth/login'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Journal API\nexport const journalAPI = {\n  createEntry: entryData => api.post('/journal', entryData),\n  getEntries: limit => api.get(`/journal?limit=${limit || 50}`),\n  getEntry: id => api.get(`/journal/${id}`),\n  updateEntry: (id, entryData) => api.put(`/journal/${id}`, entryData),\n  deleteEntry: id => api.delete(`/journal/${id}`)\n};\n\n// AI API\nexport const aiAPI = {\n  analyzeSentiment: text => api.post('/ai/sentiment', {\n    text\n  }),\n  generateResponse: data => api.post('/ai/response', data),\n  getCrisisSupport: () => api.get('/ai/crisis-support')\n};\n\n// Insights API\nexport const insightsAPI = {\n  getMoodTrends: days => api.get(`/insights/mood-trends?days=${days || 30}`),\n  getEmotionAnalysis: days => api.get(`/insights/emotions?days=${days || 30}`),\n  getInsights: () => api.get('/insights/summary')\n};\nexport default api;","map":{"version":3,"names":["axios","auth","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","user","currentUser","token","getIdToken","headers","Authorization","error","Promise","reject","response","_error$response","status","signOut","authAPI","register","userData","post","login","getProfile","get","updateProfile","put","journalAPI","createEntry","entryData","getEntries","limit","getEntry","id","updateEntry","deleteEntry","delete","aiAPI","analyzeSentiment","text","generateResponse","data","getCrisisSupport","insightsAPI","getMoodTrends","days","getEmotionAnalysis","getInsights"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { auth } from './firebase';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 30000,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n    async (config) => {\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n            const token = await user.getIdToken();\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            // Token expired or invalid\r\n            auth.signOut();\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n    register: (userData) => api.post('/auth/register', userData),\r\n    login: () => api.post('/auth/login'),\r\n    getProfile: () => api.get('/auth/profile'),\r\n    updateProfile: (userData) => api.put('/auth/profile', userData),\r\n};\r\n\r\n// Journal API\r\nexport const journalAPI = {\r\n    createEntry: (entryData) => api.post('/journal', entryData),\r\n    getEntries: (limit) => api.get(`/journal?limit=${limit || 50}`),\r\n    getEntry: (id) => api.get(`/journal/${id}`),\r\n    updateEntry: (id, entryData) => api.put(`/journal/${id}`, entryData),\r\n    deleteEntry: (id) => api.delete(`/journal/${id}`),\r\n};\r\n\r\n// AI API\r\nexport const aiAPI = {\r\n    analyzeSentiment: (text) => api.post('/ai/sentiment', { text }),\r\n    generateResponse: (data) => api.post('/ai/response', data),\r\n    getCrisisSupport: () => api.get('/ai/crisis-support'),\r\n};\r\n\r\n// Insights API\r\nexport const insightsAPI = {\r\n    getMoodTrends: (days) => api.get(`/insights/mood-trends?days=${days || 30}`),\r\n    getEmotionAnalysis: (days) => api.get(`/insights/emotions?days=${days || 30}`),\r\n    getInsights: () => api.get('/insights/summary'),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}