{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mayur\\\\OneDrive\\\\Desktop\\\\Moodmate\\\\Frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport { auth } from '../services/firebase';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuthContext = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Monitor auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      try {\n        if (firebaseUser) {\n          // Register/login with backend\n          await authAPI.login();\n          setUser({\n            uid: firebaseUser.uid,\n            email: firebaseUser.email,\n            displayName: firebaseUser.displayName,\n            photoURL: firebaseUser.photoURL\n          });\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error('Auth state change error:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      const result = await signInWithEmailAndPassword(auth, email, password);\n      return result.user;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, displayName) => {\n    try {\n      setError(null);\n      setLoading(true);\n\n      // Create Firebase user\n      const result = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Update display name\n      await updateProfile(result.user, {\n        displayName\n      });\n\n      // Register with backend\n      await authAPI.register({\n        uid: result.user.uid,\n        email: result.user.email,\n        name: displayName\n      });\n      return result.user;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setError(null);\n      await signOut(auth);\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n  const updateUserProfile = async profileData => {\n    try {\n      setError(null);\n\n      // Update Firebase profile\n      if (profileData.displayName) {\n        await updateProfile(auth.currentUser, {\n          displayName: profileData.displayName\n        });\n      }\n\n      // Update backend profile\n      await authAPI.updateProfile(profileData);\n\n      // Update local state\n      setUser(prev => ({\n        ...prev,\n        displayName: profileData.displayName || prev.displayName\n      }));\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n  const clearError = () => setError(null);\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUserProfile,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","auth","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuthContext","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","unsubscribe","firebaseUser","login","uid","email","displayName","photoURL","console","message","password","result","register","name","logout","updateUserProfile","profileData","currentUser","prev","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport {\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    signOut,\r\n    onAuthStateChanged,\r\n    updateProfile\r\n} from 'firebase/auth';\r\nimport { auth } from '../services/firebase';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const useAuthContext = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuthContext must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Monitor auth state changes\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n            try {\r\n                if (firebaseUser) {\r\n                    // Register/login with backend\r\n                    await authAPI.login();\r\n                    setUser({\r\n                        uid: firebaseUser.uid,\r\n                        email: firebaseUser.email,\r\n                        displayName: firebaseUser.displayName,\r\n                        photoURL: firebaseUser.photoURL\r\n                    });\r\n                } else {\r\n                    setUser(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth state change error:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n            const result = await signInWithEmailAndPassword(auth, email, password);\r\n            return result.user;\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const register = async (email, password, displayName) => {\r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n\r\n            // Create Firebase user\r\n            const result = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n            // Update display name\r\n            await updateProfile(result.user, { displayName });\r\n\r\n            // Register with backend\r\n            await authAPI.register({\r\n                uid: result.user.uid,\r\n                email: result.user.email,\r\n                name: displayName\r\n            });\r\n\r\n            return result.user;\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            setError(null);\r\n            await signOut(auth);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updateUserProfile = async (profileData) => {\r\n        try {\r\n            setError(null);\r\n\r\n            // Update Firebase profile\r\n            if (profileData.displayName) {\r\n                await updateProfile(auth.currentUser, {\r\n                    displayName: profileData.displayName\r\n                });\r\n            }\r\n\r\n            // Update backend profile\r\n            await authAPI.updateProfile(profileData);\r\n\r\n            // Update local state\r\n            setUser(prev => ({\r\n                ...prev,\r\n                displayName: profileData.displayName || prev.displayName\r\n            }));\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUserProfile,\r\n        clearError\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}