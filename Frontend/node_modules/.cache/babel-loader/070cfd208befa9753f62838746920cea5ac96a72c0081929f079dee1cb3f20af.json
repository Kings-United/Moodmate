{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { journalAPI } from '../services/api';\nexport const useJournal = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchEntries = async (limit = 50) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await journalAPI.getEntries(limit);\n      setEntries(response.data.entries);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch entries');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createEntry = async entryData => {\n    try {\n      const response = await journalAPI.createEntry(entryData);\n      const newEntry = response.data.entry;\n      setEntries(prev => [newEntry, ...prev]);\n      return newEntry;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to create entry');\n    }\n  };\n  const updateEntry = async (id, entryData) => {\n    try {\n      const response = await journalAPI.updateEntry(id, entryData);\n      const updatedEntry = response.data.entry;\n      setEntries(prev => prev.map(entry => entry.id === id ? updatedEntry : entry));\n      return updatedEntry;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to update entry');\n    }\n  };\n  const deleteEntry = async id => {\n    try {\n      await journalAPI.deleteEntry(id);\n      setEntries(prev => prev.filter(entry => entry.id !== id));\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to delete entry');\n    }\n  };\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n  return {\n    entries,\n    loading,\n    error,\n    fetchEntries,\n    createEntry,\n    updateEntry,\n    deleteEntry\n  };\n};\n_s(useJournal, \"VXxnBTQjStzwAeJpYl63scOGlic=\");","map":{"version":3,"names":["useState","useEffect","journalAPI","useJournal","_s","entries","setEntries","loading","setLoading","error","setError","fetchEntries","limit","response","getEntries","data","_error$response","_error$response$data","createEntry","entryData","newEntry","entry","prev","_error$response2","_error$response2$data","Error","updateEntry","id","updatedEntry","map","_error$response3","_error$response3$data","deleteEntry","filter","_error$response4","_error$response4$data"],"sources":["C:/Users/Mayur/OneDrive/Desktop/Moodmate/Frontend/src/hooks/useJournal.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { journalAPI } from '../services/api';\r\n\r\nexport const useJournal = () => {\r\n    const [entries, setEntries] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchEntries = async (limit = 50) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await journalAPI.getEntries(limit);\r\n            setEntries(response.data.entries);\r\n        } catch (error) {\r\n            setError(error.response?.data?.error || 'Failed to fetch entries');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const createEntry = async (entryData) => {\r\n        try {\r\n            const response = await journalAPI.createEntry(entryData);\r\n            const newEntry = response.data.entry;\r\n            setEntries(prev => [newEntry, ...prev]);\r\n            return newEntry;\r\n        } catch (error) {\r\n            throw new Error(error.response?.data?.error || 'Failed to create entry');\r\n        }\r\n    };\r\n\r\n    const updateEntry = async (id, entryData) => {\r\n        try {\r\n            const response = await journalAPI.updateEntry(id, entryData);\r\n            const updatedEntry = response.data.entry;\r\n            setEntries(prev => prev.map(entry =>\r\n                entry.id === id ? updatedEntry : entry\r\n            ));\r\n            return updatedEntry;\r\n        } catch (error) {\r\n            throw new Error(error.response?.data?.error || 'Failed to update entry');\r\n        }\r\n    };\r\n\r\n    const deleteEntry = async (id) => {\r\n        try {\r\n            await journalAPI.deleteEntry(id);\r\n            setEntries(prev => prev.filter(entry => entry.id !== id));\r\n        } catch (error) {\r\n            throw new Error(error.response?.data?.error || 'Failed to delete entry');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEntries();\r\n    }, []);\r\n\r\n    return {\r\n        entries,\r\n        loading,\r\n        error,\r\n        fetchEntries,\r\n        createEntry,\r\n        updateEntry,\r\n        deleteEntry\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}